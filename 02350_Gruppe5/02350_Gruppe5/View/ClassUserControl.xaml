<UserControl x:Class="_02350_Gruppe5.View.ClassUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
             Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}"
             d:DesignHeight="100" d:DesignWidth="100">
    <!-- ClassBox layout -->

    <Border Name="borderBox" BorderThickness="2" Background="White" BorderBrush="{Binding SelectedColor}"  Width="{Binding Width}" Height="{Binding Height}" CornerRadius="8,8,8,8" Opacity="{Binding DataContext.ModeOpacity, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDown">
                <cmd:EventToCommand Command="{Binding DataContext.MouseDownClassBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseMove">
                <cmd:EventToCommand Command="{Binding DataContext.MouseMoveClassBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseUp">
                <cmd:EventToCommand Command="{Binding DataContext.MouseUpClassBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Border.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="200" To="210" Duration="0:0:0:0.05" ></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" From="200" To="210" Duration="0:0:0:0.05"></DoubleAnimation>
                                    </Storyboard>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Border.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="60">
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="210" To="200" Duration="0:0:0:0.05" ></DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="210" To="200" Duration="0:0:0:0.05"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <!-- Rounded mask (stretches to fill Grid) -->
            <Border Name="mask" Background="White" CornerRadius="7,7,7,7"/>
            <!-- Main content container -->
            <StackPanel>
                <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                <StackPanel.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=mask}"/>
                </StackPanel.OpacityMask>
                <Button Height="20" Width="20">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Button.MouseDown">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard Timeline.DesiredFrameRate="60">
                                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="200" To="210" Duration="0:0:0:0.05" ></DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="200" To="210" Duration="0:0:0:0.05"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    Button 1
                </Button>
                <TextBlock TextAlignment="Center" FontWeight="Bold" Text="{Binding ClassName}" Padding="2" Background="AliceBlue"></TextBlock>
                <ListView Name="attNames" VerticalAlignment="Top" ItemsSource="{Binding AttNamesClass}" IsEnabled="False">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <ListView Name="methodNames" VerticalAlignment="Top" ItemsSource="{Binding MethodNamesClass}" IsEnabled="False">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </Grid>
    </Border>



</UserControl>
